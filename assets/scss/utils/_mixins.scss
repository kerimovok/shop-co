@mixin flex(
    $justify-content: flex-start,
    $align-items: flex-start,
    $flex-direction: row,
    $gap: 0
) {
    display: flex;
    flex-direction: $flex-direction;
    justify-content: $justify-content;
    align-items: $align-items;
    gap: $gap;
}

@mixin grid(
    $columns: auto,
    $rows: auto,
    $gap: 0,
    $col-width: 1fr,
    $row-height: 1fr
) {
    display: grid;
    grid-template-columns: repeat($columns, $col-width);
    grid-template-rows: repeat($rows, $row-height);
    gap: $gap;
}

@mixin position(
    $position: initial,
    $top: initial,
    $left: initial,
    $bottom: initial,
    $right: initial,
    $z-index: auto
) {
    position: $position;
    top: $top;
    left: $left;
    bottom: $bottom;
    right: $right;
    z-index: $z-index;
}

@mixin size($size: 0px) {
    width: $size;
    height: $size;
}

@mixin bg-img(
    $url: "",
    $size: cover,
    $position: center,
    $repeat: no-repeat,
    $attachment: scroll
) {
    background-image: url($url);
    background-size: $size;
    background-position: $position;
    background-repeat: $repeat;
    background-attachment: $attachment;
}

@mixin img(
    $width: 100%,
    $height: 100%,
    $object-fit: cover,
    $object-position: center,
    $scaleOnHover: false
) {
    width: $width;
    height: $height;
    object-fit: $object-fit;
    object-position: $object-position;

    @if $scaleOnHover {
        &:hover {
            transform: scale(1.1);
        }
    }
}

@mixin transition($property: all, $duration: 0.3s, $timing-function: ease) {
    transition: $property $duration $timing-function;
}

@mixin shadow($x: 0, $y: 0, $blur: 0, $spread: 0, $color: rgba(0, 0, 0, 0.1)) {
    box-shadow: $x $y $blur $spread $color;
}

@mixin gradient($direction: to right, $color-1: black, $color-2: transparent) {
    background: linear-gradient($direction, $color-1, $color-2);
}

@mixin responsive($breakpoints) {
    @if $breakpoints == small {
        @media (max-width: $breakpoint-small) {
            @content;
        }
    }

    @if $breakpoints == medium {
        @media (max-width: $breakpoint-medium) {
            @content;
        }
    }

    @if $breakpoints == large {
        @media (max-width: $breakpoint-large) {
            @content;
        }
    }

    @if $breakpoints == x-large {
        @media (min-width: $breakpoint-xlarge) {
            @content;
        }
    }
}
